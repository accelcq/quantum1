name: Deploy Quantum1 Frontend and Backend to IBM Cloud

on:
  push:
    branches:
      - main

env:
  REGION: us-south
  RESOURCE_GROUP: default
  CLUSTER_NAME: quantum1-cluster
  NAMESPACE: quantum1space
  REGISTRY: us.icr.io
  REPO_FRONTEND: quantum1space/quantum1-frontend
  REPO_BACKEND: quantum1space/quantum1-backend

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install IBM Cloud CLI
        run: |
          curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
          ibmcloud plugin install container-registry container-service -f

      - name: Authenticate with IBM Cloud
        env:
          IBMCLOUD_API_KEY: ${{ secrets.IBMCLOUD_API_KEY }}
        run: |
          ibmcloud login --apikey $IBMCLOUD_API_KEY -r $REGION -g $RESOURCE_GROUP
          ibmcloud cr login
          ibmcloud ks cluster config --cluster $CLUSTER_NAME

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Frontend Image
        working-directory: ./frontend
        run: |
          docker build -t $REGISTRY/$REPO_FRONTEND:latest .
          docker push $REGISTRY/$REPO_FRONTEND:latest
        continue-on-error: false

      - name: Build and Push Backend Image
        working-directory: .
        run: |
          docker build -t $REGISTRY/$REPO_BACKEND:latest -f Dockerfile-backend .
          docker push $REGISTRY/$REPO_BACKEND:latest
        continue-on-error: false

      - name: Apply Frontend Deployment
        run: |
          kubectl apply -f quantum1-frontend-deployment.yaml -n $NAMESPACE
          kubectl rollout status deployment/quantum1-frontend -n $NAMESPACE

      - name: Apply Backend Deployment
        run: |
          kubectl apply -f quantum1-backend-deployment.yaml -n $NAMESPACE
          kubectl rollout status deployment/quantum1-backend -n $NAMESPACE

      - name: Debug Service Endpoints
        run: |
          kubectl get svc -n $NAMESPACE

      - name: Print Backend Logs (on failure)
        if: failure()
        run: |
          kubectl logs -l app=quantum1-backend -n $NAMESPACE || true

      - name: Print Frontend Logs (on failure)
        if: failure()
        run: |
          kubectl logs -l app=quantum1-frontend -n $NAMESPACE || true
